
                              程序的基本概念


+   gcc是linux平台的C编译器，编译后在在当前目录下生成可执行文件a.out，直接
    在命令行输入这个可执行文件的路径就可以执行它。如果不行把这个文件名叫 
    a.out,可以用gcc的-o参数自己指定文件名：

    $ gcc main.c -o main
    $ ./main
      
+   /*... ...*/结构是一个注释。不会被编译进目标代码。

+   c语言中每条语句末尾都要以一个分号结尾，但也有例外，复合语句就不以分号结尾。

+   编译时尽量打开-wall选项进行编译，gcc -wall main.c .
 
+   指令都是以字符#开始的，此字符可以把c程序中的指令和其他代码区分开来，指令
    的末尾既没有分号，也没有其他标记。
+   嵌入式：至少有一个pc机，但用户不知道。裸机开发，单片机，工业控制。操作系统开    发主要是数据处理，多任务的。
+   main 函数结尾用一条return语句结束，始终让main函数的返回值为0；这个值表明程序
    正常终止。

                       数据类型·常量·变量和表达式
                
+   %后面加个字母c ,d,f叫做占位符，是由printf解释的，转义序列是编译器在处理
    字符串字面值时转义的。

+   "5",'5',5
     分别是字符串，字符，整数。

+   变量是计算机存储器中的一块命名空间，可以在里面存储一个值，存储值可以随时变。

+   变量名以字符和下划行开头，由字母，下划行，数字组成。

+   + - * /是左结合的，等号是右结合。
                           
+   / 运算符，如果%d 打印，要求两侧都是整数，如果两侧存在浮点型数据，系统会把另一侧也转换成浮点型，之后%f打印。
                           
                           
                           
                           
                           位操作
                           
+   char -128~127,   0->0000 0000,-128->1000 0000.
+   取位，所取位用1保护，其余取0，按位与（&）把所取位取出。
+   a<<1;数字放在寄存器里，但a值不变。
    a<<=1;赋值之后a值才变。
+   数值计算时，占用空间少的向占用空间大的转换。也就是简单向复杂转换。
+   







